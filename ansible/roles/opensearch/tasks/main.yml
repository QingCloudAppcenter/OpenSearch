---
- name: set up variables
  set_fact:
    opensearch_version: "{{ opensearch_version | d('2.19.1') }}"
    arch: "{{ arch | d(default_arch) }}"
    installPath: "/opt/opensearch"

- name: set up cpu for amd64
  set_fact:
    cpu: "x64"
  when: arch == 'amd64'

- name: set up cpu for arm64
  set_fact:
    cpu: "arm64"
  when: arch == 'arm64'

- name: group svc
  group:
    name: svc
    state: present

- name: User - opensearch
  user:
    name: opensearch
    groups: svc
    shell: /usr/sbin/nologin
    create_home: no
    append: yes
    state: present

# will set var downloaded
- include_role:
    name: downloader
  vars:
    opts:
      pkg_name: opensearch
      pkg_version: "{{ opensearch_version }}"
      pkg_feature: "linux-{{ arch }}"
      pkg_fileType: ".tgz"
      pkg_url: "https://artifacts.opensearch.org/releases/bundle/opensearch/{{ opensearch_version }}/opensearch-{{ opensearch_version }}-linux-{{ cpu }}.tar.gz"

- name: prepare dir
  file:
    path: "{{ installPath }}/{{ opensearch_version }}"
    state: directory

- name: link for current
  file:
    src: "{{ installPath }}/{{ opensearch_version }}"
    dest: "{{ installPath }}/current"
    state: link

- name: decompress file
  unarchive:
    src: "{{ downloaded }}"
    dest: "{{ installPath }}/current"
    creates: "{{ installPath }}/current/bin/opensearch"
    extra_opts:
    - --strip-components=1

- name: jdk file permission
  file:
    path: '/opt/opensearch/current/jdk'
    mode: o+rX
    state: directory
    recurse: yes

- name: copy opensearch initial config
  copy:
    src: /opt/opensearch/current/config/
    dest: /opt/app/current/conf/opensearch
    owner: root
    group: svc
    mode: g+w
    remote_src: yes

- name: copy more configuration files
  copy:
    src: opt/app/conf/
    dest: /opt/app/current/conf
    owner: root
    group: svc
    mode: g+w

# - name: check if commons-logging-1.3.2-bin.tar.gz exists
#   stat:
#     path: "{{ role_path }}/files/tmp/commons-logging-1.3.2-bin.tar.gz"
#   register: commons_logging
#   delegate_to: localhost

# - name: download commons-logging-1.3.2-bin.tar.gz
#   get_url:
#     url: "https://dlcdn.apache.org//commons/logging/binaries/commons-logging-1.3.2-bin.tar.gz"
#     dest: "{{ role_path }}/files/tmp/commons-logging-1.3.2-bin.tar.gz"
#   delegate_to: localhost
#   when: commons_logging.stat.exists == False

# - name: unarchive commons-logging-1.3.2-bin.tar.gz
#   unarchive:
#     src: "files/tmp/commons-logging-1.3.2-bin.tar.gz"
#     dest: "/opt/opensearch/current/plugins/opensearch-analysis-ik"
#     owner: root
#     group: svc
#     mode: "0644"
#     extra_opts:
#       - "--strip-components=1"
#       - "commons-logging-1.3.2/commons-logging-1.3.2.jar"

- name: fix internal_users.yml
  shell: |
    fn="/opt/app/current/conf/opensearch/opensearch-security/internal_users.yml"
    adminLine=$(awk '/^admin/{print NR; exit}' $fn)
    reservedLine=$(awk -v n=$adminLine 'NR>n && /reserved/{print NR; exit}' $fn)
    sed -i "${reservedLine}s/.*/  reserved: false/" $fn