---
- name: setting facts - LS plugins
  set_fact:
    local_dir: "{{ role_path }}/files/tmp/ls-plugins"
    remote_dir: "{{ ls_home }}/plugins"

- name: Check if the plugin was installed - {{ opts.name }}
  command: grep -q 'gem "{{ opts.name }}"' {{ ls_home }}/Gemfile
  register: installed
  ignore_errors: True

- name: Prepare LS plugins directory
  file:
    dest: "{{ remote_dir }}"
    owner: logstash
    group: svc
    state: directory

- name: Prepare local tmp dir for LS plugins
  file:
    dest: "{{ local_dir }}"
    state: directory
  delegate_to: localhost

- name: check if plugin file exists
  stat:
    path: "{{ local_dir }}/{{ opts.name }}-{{ opts.version }}.tgz"
  register: pkg_file
  run_once: True
  delegate_to: localhost

- name: Download LS plugin - {{ opts.name }}
  get_url:
    url: "{{ opts.url | default('https://github.com/logstash-plugins/' + opts.name + '/archive/v' + opts.version + '.tar.gz') }}"
    dest: "{{ local_dir }}/{{ opts.name }}-{{ opts.version }}.tgz"
  delegate_to: localhost
  when: pkg_file.stat.exists == False

- name: Extract LS plugin - {{ opts.name }}
  unarchive:
    src: "{{ local_dir }}/{{ opts.name }}-{{ opts.version }}.tgz"
    dest: "{{ remote_dir }}"
    creates: "{{ remote_dir }}/{{ opts.name }}-{{ opts.version }}"
    owner: logstash
    group: svc
  when: installed is failed

- name: Add to Gemfile
  lineinfile:
    path: "{{ ls_home }}/Gemfile"
    regexp: '^gem "{{ opts.name }}"'
    line: 'gem "{{ opts.name }}", :path => "./plugins/{{ opts.name }}-{{ opts.version }}"'
    insertafter: EOF
