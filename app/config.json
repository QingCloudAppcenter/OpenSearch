{
  "type": "array",
  "properties": [{
    "key": "cluster",
    "description": "Opensearch cluster properties",
    "type": "array",
    "properties": [{
      "key": "name",
      "label": "Name",
      "description": "The name of the OpenSearch service",
      "type": "string",
      "default": "OpenSearch",
      "required": "no"
    }, {
      "key": "description",
      "label": "Description",
      "description": "The description of the OpenSearch service",
      "type": "string",
      "default": "",
      "required": "no"
    }, {
      "key": "vxnet",
      "label": "VxNet",
      "description": "Choose a vxnet to join",
      "type": "string",
      "default": "",
      "required": "yes"
    }, {
      "key": "resource_group",
      "label": "Express Configuration",
      "description": "Test: OS * 1, OS M * 1, Logstash * 1, Dashboard * 1; Pre-prod: OS * 2, OS M * 1, Logstash * 1, Dashboard * 1; Prod HA: OS * 3, OS Master * 3, Logstash * 1, Dashboard * 2",
      "type": "string",
      "default": "Pre-prod",
      "range": [
        "Test",
        "Pre-prod",
        "Prod HA"
      ]
    }, {
      "key": "es_node",
      "label": "OpenSearch Node",
      "description": "Data nodes with label node.attr.data: hot",
      "type": "array",
      "properties": [{
        "key": "cpu",
        "label": "CPU",
        "description": "CPUs of each node",
        "type": "integer",
        "range": [
          2,
          4,
          8,
          12,
          16,
          32
        ],
        "default": 2,
        "resource_group": [2, 2, 2],
        "required": "yes"
      }, {
        "description": "Memory of each node",
        "key": "memory",
        "label": "Memory",
        "type": "integer",
        "range": [
          2048,
          4096,
          6144,
          8192,
          12288,
          16384,
          24576,
          32768,
          40960,
          49152,
          65536
        ],
        "default": 4096,
        "resource_group": [2048, 4096, 8192],
        "required": "yes"
      }, {
        "key": "count",
        "label": "Node Count",
        "description": "Number of nodes to create",
        "type": "integer",
        "min": 0,
        "max": 200,
        "default": 3,
        "resource_group": [1, 2, 3],
        "required": "yes"
      }, {
        "key": "instance_class",
        "label": "Instance Class",
        "description": "",
        "type": "integer",
        "range": [
          101,
          202,
          203
        ],
        "default": 203,
        "required": "yes"
      }, {
        "key": "volume_class",
        "label": "Volume Class",
        "description": "The volume type for each node, such as high performance, high performance plus, NeonSAN",
        "type": "integer",
        "range": [
          100,
          5,
          6,
          200
        ],
        "default": 200,
        "required": "yes"
      }, {
        "key": "volume_size",
        "label": "Volume Size",
        "description": "The volume size for each node",
        "type": "integer",
        "min": 30,
        "step": 30,
        "auto_scale_step": 30,
        "default": 60,
        "required": "yes"
      }]
    }, {
      "key": "es_master_node",
      "label": "OpenSearch Master Node",
      "description": "Dedicated master nodes",
      "type": "array",
      "properties": [{
        "key": "cpu",
        "label": "CPU",
        "description": "CPUs of each node",
        "type": "integer",
        "range": [
          1,
          2,
          4,
          8,
          12,
          16,
          32
        ],
        "default": 1,
        "resource_group": [1, 2, 2],
        "required": "yes"
      }, {
        "key": "memory",
        "label": "Memory",
        "description": "Memory of each node",
        "type": "integer",
        "range": [
          2048,
          4096,
          6144,
          8192,
          12288,
          16384,
          24576,
          32768,
          40960,
          49152,
          65536
        ],
        "default": 2048,
        "resource_group": [2048, 4096, 4096],
        "required": "yes"
      }, {
        "key": "count",
        "label": "Node Count",
        "description": "Number of master nodes to create",
        "type": "integer",
        "range": [
          1,
          3,
          5
        ],
        "default": 3,
        "resource_group": [1, 1, 3],
        "required": "yes"
      }, {
        "key": "instance_class",
        "label": "Instance Class",
        "description": "",
        "type": "integer",
        "range": [
          101,
          202,
          203
        ],
        "default": 101,
        "required": "yes"
      }, {
        "key": "volume_class",
        "label": "Volume Class",
        "description": "The volume type for each node, such as high performance, high performance plus, NeonSAN",
        "type": "integer",
        "range": [
          100,
          5,
          6,
          200
        ],
        "default": 100,
        "required": "yes"
      }, {
        "key": "volume_size",
        "label": "Volume Size",
        "description": "The volume size for each node",
        "type": "integer",
        "min": 10,
        "auto_scale_step": 10,
        "default": 10,
        "required": "yes"
      }]
    }, {
      "key": "es_node_2",
      "label": "OpenSearch Node 2",
      "description": "Data nodes with label node.attr.data: warm",
      "type": "array",
      "properties": [{
        "key": "cpu",
        "label": "CPU",
        "description": "CPUs of each node",
        "type": "integer",
        "range": [
          1,
          2,
          4,
          8,
          12,
          16,
          32
        ],
        "default": 2,
        "resource_group": [1, 2, 2],
        "required": "yes"
      }, {
        "description": "Memory of each node",
        "key": "memory",
        "label": "Memory",
        "type": "integer",
        "range": [
          2048,
          4096,
          6144,
          8192,
          12288,
          16384,
          24576,
          32768,
          40960,
          49152,
          65536
        ],
        "default": 4096,
        "resource_group": [2048, 4096, 8192],
        "required": "yes"
      }, {
        "key": "count",
        "label": "Node Count",
        "description": "Number of nodes to create",
        "type": "integer",
        "min": 0,
        "max": 200,
        "default": 0,
        "required": "yes"
      }, {
        "key": "instance_class",
        "label": "Instance Class",
        "description": "",
        "type": "integer",
        "range": [
          101,
          202,
          203
        ],
        "default": 203,
        "required": "yes"
      }, {
        "key": "volume_class",
        "label": "Volume Class",
        "description": "The volume type for each node, such as high performance, high performance plus, NeonSAN",
        "type": "integer",
        "range": [
          100,
          5,
          6,
          200
        ],
        "default": 200,
        "required": "yes"
      }, {
        "key": "volume_size",
        "label": "Volume Size",
        "description": "The volume size for each node",
        "type": "integer",
        "min": 30,
        "step": 30,
        "auto_scale_step": 30,
        "default": 60,
        "required": "yes"
      }]
    }, {
      "key": "es_node_3",
      "label": "OpenSearch Node 3",
      "description": "Data nodes with label node.attr.data: cold",
      "type": "array",
      "properties": [{
        "key": "cpu",
        "label": "CPU",
        "description": "CPUs of each node",
        "type": "integer",
        "range": [
          1,
          2,
          4,
          8,
          12,
          16,
          32
        ],
        "default": 2,
        "resource_group": [1, 2, 2],
        "required": "yes"
      }, {
        "description": "Memory of each node",
        "key": "memory",
        "label": "Memory",
        "type": "integer",
        "range": [
          2048,
          4096,
          6144,
          8192,
          12288,
          16384,
          24576,
          32768,
          40960,
          49152,
          65536
        ],
        "default": 4096,
        "resource_group": [2048, 4096, 4096],
        "required": "yes"
      }, {
        "key": "count",
        "label": "Node Count",
        "description": "Number of nodes to create",
        "type": "integer",
        "min": 0,
        "max": 200,
        "default": 0,
        "required": "yes"
      }, {
        "key": "instance_class",
        "label": "Instance Class",
        "description": "",
        "type": "integer",
        "range": [
          101,
          202,
          203
        ],
        "default": 101,
        "required": "yes"
      }, {
        "key": "volume_class",
        "label": "Volume Class",
        "description": "The volume type for each node, such as high performance, high performance plus, NeonSAN",
        "type": "integer",
        "range": [
          100,
          5,
          6,
          200
        ],
        "default": 6,
        "required": "yes"
      }, {
        "key": "volume_size",
        "label": "Volume Size",
        "description": "The volume size for each node",
        "type": "integer",
        "min": 30,
        "step": 30,
        "auto_scale_step": 30,
        "default": 300,
        "required": "yes"
      }]
    }, {
      "key": "lst_node",
      "label": "Logstash Node",
      "description": "Logstash node",
      "type": "array",
      "properties": [{
        "key": "cpu",
        "label": "CPU",
        "description": "CPUs of each node",
        "type": "integer",
        "range": [
          1,
          2,
          4,
          8,
          12,
          16,
          32
        ],
        "default": 2,
        "resource_group": [1, 2, 2],
        "required": "yes"
      }, {
        "key": "memory",
        "label": "Memory",
        "description": "Memory of each node",
        "type": "integer",
        "range": [
          1024,
          2048,
          4096,
          6144,
          8192,
          12288,
          16384,
          32768,
          40960,
          49152,
          65536
        ],
        "default": 4096,
        "resource_group": [1024, 4096, 4096],
        "required": "yes"
      }, {
        "key": "count",
        "label": "Node Count",
        "description": "Number of nodes to create",
        "type": "integer",
        "min": 0,
        "max": 50,
        "default": 1,
        "resource_group": [1, 1, 1],
        "required": "yes"
      }, {
        "key": "instance_class",
        "label": "Instance Class",
        "description": "",
        "type": "integer",
        "range": [
          101,
          202,
          203
        ],
        "default": 203,
        "required": "yes"
      }, {
        "key": "volume_size",
        "label": "Volume Size",
        "description": "The volume size for each node",
        "type": "integer",
        "min": 10,
        "auto_scale_step": 10,
        "default": 10,
        "required": "yes"
      }]
    }, {
      "key": "kbn_node",
      "label": "Dashboard Node",
      "description": "Dashboard Node",
      "type": "array",
      "properties": [{
        "key": "cpu",
        "label": "CPU",
        "description": "CPUs of each node",
        "type": "integer",
        "range": [
          1,
          2,
          4,
          8
        ],
        "default": 2,
        "resource_group": [1, 2, 2],
        "required": "yes"
      }, {
        "key": "memory",
        "label": "Memory",
        "description": "Memory of each node",
        "type": "integer",
        "range": [
          2048,
          4096,
          6144,
          8192
        ],
        "default": 4096,
        "resource_group": [2048, 4096, 4096],
        "required": "yes"
      }, {
        "key": "count",
        "label": "Node Count",
        "description": "Number of Dashboard Nodes to create",
        "type": "integer",
        "range": [
          0,
          1,
          2
        ],
        "default": 1,
        "resource_group": [1, 1, 2],
        "required": "yes"
      }, {
        "key": "instance_class",
        "label": "Instance Class",
        "description": "",
        "type": "integer",
        "range": [
          101,
          202,
          203
        ],
        "default": 101,
        "required": "yes"
      }]
    }]
  }, {
    "key": "env",
    "description": "application configuration properties",
    "type": "array",
    "properties": [{
      "key": "global",
      "description": "The global configuration propoerties fo the application",
      "type": "array",
      "properties": [{
        "key": "dynamic.other.enable_caddy",
        "label": "enable_caddy",
        "description": "Enable caddy service on all nodes.",
        "type": "boolean",
        "default": true,
        "required":"no"
      }, {
        "key": "cert.os.ssl.http.enabled",
        "label": "Enable opensearch nodes' http ssl",
        "description": "Enable opensearch nodes' http ssl or not. Use system provided certificates or custome certificate, if enabled",
        "type": "boolean",
        "default": true,
        "required": "no"
      }, {
        "key": "cert.os.user_ca_enabled",
        "label": "Enable custom CA certificate",
        "description": "Enable custom CA certificate for opensearch nodes or not.",
        "type": "boolean",
        "default": false,
        "required": "no"
      }, {
        "key": "cert.os.user_ca",
        "label": "Custom CA certificate",
        "description": "Custom CA certificate for opensearch nodes",
        "type": "password",
        "default": "",
        "required": "no"
      }, {
        "key": "cert.os.user_node_cert",
        "label": "Custom node certificate",
        "description": "Custom certificate for opensearch nodes",
        "type": "password",
        "default": "",
        "required": "no"
      }, {
        "key": "cert.os.user_node_key",
        "label": "Custom node certificate key",
        "description": "Custom certificate key for opensearch nodes",
        "type": "password",
        "default": "",
        "required": "no"
      }]
    },{
      "key": "es_node",
      "description": "The role configuration properties of the application",
      "type": "array",
      "properties": [{
        "key": "static.os.admin_pass",
        "label": "admin_pass",
        "description": "The admin password, can be changed in Dashboards console. Must contain a combination of uppercase and lowercase letters and numbers, special characters can be used (including @#%&*()_+-=), and the length is between 8-32. Default value is ChangeMe123.",
        "type": "password",
        "pattern": "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z@#\\%\\&\\*\\(\\)\\_\\+\\-\\=]{8,32}$",
        "default": "ChangeMe123",
        "required": "yes",
        "changeable": false
      }, {
        "key": "prometheus.node.exporter",
        "label": "enable.node.exporter",
        "description": "Prometheus exporter for hardware and OS metrics exposed by *NIX kernels with pluggable metric collectors.",
        "type": "string",
        "default": "true",
        "range": ["true", "false"],
        "required": "no"
      }, {
        "key": "dynamic.os.prometheus.indices",
        "label": "prometheus.indices",
        "description": "Settings for opensearch-exporter-plugin. Whether to export detailed index level metrics or not.",
        "type": "boolean",
        "default": false,
        "required": "no"
      }, {
        "key": "dynamic.os.prometheus.cluster.settings",
        "label": "prometheus.cluster.settings",
        "description": "Settings for opensearch-exporter-plugin. Whether to export cluster settings or not.",
        "type": "boolean",
        "default": false,
        "required": "no"
      }, {
        "key": "dynamic.os.prometheus.nodes.filter",
        "label": "prometheus.nodes.filter",
        "description": "Settings for opensearch-exporter-plugin. Whether to export metrics from local node or all nodes.",
        "type": "string",
        "default": "_local",
        "range": ["_local", "_all"],
        "required": "no"
      }, {
        "key": "dynamic.os.cluster.routing.allocation.enable",
        "label": "cluster.routing.allocation.enable",
        "description": "Enable or disable allocation for specific kinds of shards.",
        "type": "string",
        "default": "all",
        "range": ["all", "primaries", "new_primaries", "none"],
        "required": "no"
      }, {
        "key": "static.os.thread_pool.write.queue_size",
        "label": "thread_pool.write.queue_size",
        "description": "The queue_size allows to control the size of the queue of pending requests that have no threads to execute them.",
        "type": "integer",
        "min": 2000,
        "max": 50000,
        "default": 10000,
        "required": "no"
      }, {
        "key": "static.os.thread_pool.search.queue_size",
        "label": "thread_pool.search.queue_size",
        "description": "The queue_size allows to control the initial size of the queue of pending requests that have no threads to execute them.",
        "type": "integer",
        "min": 200,
        "max": 10000,
        "default": 1000,
        "required": "no"
      }, {
        "key": "dynamic.os.action.destructive_requires_name",
        "label": "action.destructive_requires_name",
        "description": "In order to enable allowing to delete indices via wildcards or _all, set this config to false.",
        "type": "boolean",
        "default": true,
        "changeable": true,
        "required": "no"
      }, {
        "key": "dynamic.os.cluster.no_master_block",
        "label": "cluster.no_master_block",
        "description": "The cluster.no_master_block settings controls what operations should be rejected when there is no active master.",
        "type": "string",
        "range": [
          "all",
          "write",
          "metadata_write"
        ],
        "default": "write",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.gateway.recover_after_time",
        "label": "gateway.recover_after_time",
        "description": "If the expected number of nodes is not achieved, the recovery process waits for the configured amount of time before trying to recover regardless. Defaults to 5m if one of the expected_nodes settings is configured.",
        "type": "string",
        "pattern": "[0-9]+[smh]",
        "default": "5m",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.gateway.expected_data_nodes",
        "label": "gateway.expected_data_nodes",
        "description": "Number of data nodes expected in the cluster. Recovery of local shards begins when the expected number of data nodes join the cluster. Defaults to 0.",
        "type": "integer",
        "min": -1,
        "default": 0,
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.gateway.recover_after_data_nodes",
        "label": "gateway.recover_after_data_nodes",
        "description": "Recover as long as this many data nodes have joined the cluster.",
        "type": "integer",
        "min": -1,
        "default": -1,
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.http.cors.enabled",
        "label": "http.cors.enabled",
        "description": "Enable or disable cross-origin resource sharing, i.e. whether a browser on another origin can execute requests against Opensearch.",
        "type": "boolean",
        "default": false,
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.http.cors.allow-origin",
        "label": "http.cors.allow-origin",
        "description": "Which origins to allow.",
        "type": "string",
        "default": "",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.indices.memory.index_buffer_size",
        "label": "indices.memory.index_buffer_size",
        "description": "Accepts either a percentage or a byte size value. It defaults to 10%, meaning that 10% of the total heap allocated to a node will be used as the indexing buffer size shared across all shards.",
        "type": "string",
        "default": "10%",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.indices.fielddata.cache.size",
        "label": "indices.fielddata.cache.size",
        "description": "The max size of the field data cache.",
        "type": "string",
        "default": "-1b",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.indices.queries.cache.size",
        "label": "indices.queries.cache.size",
        "description": "Controls the memory size for the filter cache , defaults to 10%. Accepts either a percentage value, like 5%, or an exact value, like 512mb.",
        "type": "string",
        "default": "10%",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.indices.requests.cache.size",
        "label": "indices.requests.cache.size",
        "description": "The shard-level request cache module caches the local results on each shard. The cache is managed at the node level, and has a default maximum size of 1% of the heap.",
        "type": "string",
        "default": "1%",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.node.attr.data",
        "label": "node.attr.data",
        "description": "Custom attribute for OpenSearch node, used for hot-warm-cold setup.",
        "type": "string",
        "default": "hot",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.script.allowed_types",
        "label": "script.allowed_types",
        "description": "Security settings for scripting, please refer to https://www.elastic.co/guide/en/elasticsearch/reference/8.6/modules-scripting-security.html",
        "type": "string",
        "default": "",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.script.allowed_contexts",
        "label": "script.allowed_contexts",
        "description": "Security settings for scripting, please refer to https://www.elastic.co/guide/en/elasticsearch/reference/8.6/modules-scripting-security.html",
        "type": "string",
        "default": "",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.reindex.remote.whitelist",
        "label": "reindex.remote.whitelist",
        "description": "Remote hosts for 'reindex' operation have to be explicitly whitelisted in opensearch.yaml using the reindex.remote.whitelist property. It can be set to a comma delimited list of allowed remote host and port combinations (e.g. otherhost:9200, another:9200, 127.0.10.*:9200, localhost:*)",
        "type": "string",
        "pattern": "^$|^([a-z0-9-.*]+:[0-9*]+(, *)?)+$",
        "default": "",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.ik.local_ext_dict",
        "label": "local_ext_dict",
        "description": "Settings for opensearch-analysis-ik plugin. Enable local dictionary or not.",
        "type": "boolean",
        "default": true,
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.ik.local_ext_stopwords",
        "label": "local_ext_stopwords",
        "description": "Settings for opensearch-analysis-ik plugin. Enable local stopwords dictionary or not.",
        "type": "boolean",
        "default": true,
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.ik.remote_ext_dict",
        "label": "remote_ext_dict",
        "description": "Settings for opensearch-analysis-ik plugin. Specify the location of extensional dictionary from remote.",
        "type": "string",
        "default": "",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.ik.remote_ext_stopwords",
        "label": "remote_ext_stopwords",
        "description": "Settings for opensearch-analysis-ik plugin. Specify the location of extensional stopwords dictionary from remote.",
        "type": "string",
        "default": "",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.repositories.url.allowed_urls",
        "label": "repositories.url.allowed_urls",
        "description": "Specifies the read-only URL repositories that snapshots can be restored from. Refer to https://www.elastic.co/guide/en/elasticsearch/reference/8.6/snapshot-settings.html",
        "type": "string",
        "default": "[]",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.os_additional_line1",
        "label": "os_additional_line1",
        "description": "The additional configuration in opensearch.yml. e.g. key: value",
        "type": "string",
        "default": "",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.os_additional_line2",
        "label": "os_additional_line2",
        "description": "The additional configuration in opensearch.yml. e.g. key: value",
        "type": "string",
        "default": "",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.os.os_additional_line3",
        "label": "os_additional_line3",
        "description": "The additional configuration in opensearch.yml. e.g. key: value",
        "type": "string",
        "default": "",
        "changeable": true,
        "required": "no"
      }, {
        "key": "keystore.os.key_value1",
        "label": "keystore key-value 1",
        "description": "One of keystore settings, e.g. key=value.",
        "type": "password",
        "default": "",
        "changeable": true,
        "required": "no"
      }, {
        "key": "keystore.os.key_value2",
        "label": "keystore key-value 2",
        "description": "One of keystore settings, e.g. key=value.",
        "type": "password",
        "default": "",
        "changeable": true,
        "required": "no"
      }, {
        "key": "keystore.os.key_value3",
        "label": "keystore key-value 3",
        "description": "One of keystore settings, e.g. key=value.",
        "type": "password",
        "default": "",
        "changeable": true,
        "required": "no"
      }, {
        "key": "keystore.os.key_value4",
        "label": "keystore key-value 4",
        "description": "One of keystore settings, e.g. key=value.",
        "type": "password",
        "default": "",
        "changeable": true,
        "required": "no"
      }, {
        "key": "keystore.os.key_value5",
        "label": "keystore key-value 5",
        "description": "One of keystore settings, e.g. key=value.",
        "type": "password",
        "default": "",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.log4j.logger.action.level",
        "label": "logger.action.level",
        "description": "The logger.action.level configuration in log4j2.properties.",
        "type": "string",
        "range": [
          "debug",
          "trace",
          "info",
          "warn",
          "error"
        ],
        "default": "info",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.log4j.rootLogger.level",
        "label": "rootLogger.level",
        "description": "The rootLogger.level configuration in log4j2.properties.",
        "type": "string",
        "range": [
          "debug",
          "trace",
          "info",
          "warn",
          "error"
        ],
        "default": "info",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.log4j.logger.deprecation.level",
        "label": "logger.deprecation.level",
        "description": "The logger.deprecation.level configuration in log4j2.properties.",
        "type": "string",
        "range": [
          "debug",
          "trace",
          "info",
          "warn",
          "error"
        ],
        "default": "warn",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.log4j.logger.index_search_slowlog_rolling.level",
        "label": "logger.index_search_slowlog_rolling.level",
        "description": "The logger.index_search_slowlog_rolling.level configuration in log4j2.properties.",
        "type": "string",
        "range": [
          "debug",
          "trace",
          "info",
          "warn",
          "error"
        ],
        "default": "trace",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.log4j.logger.index_indexing_slowlog.level",
        "label": "logger.index_indexing_slowlog.level",
        "description": "The logger.index_indexing_slowlog.level configuration in log4j2.properties.",
        "type": "string",
        "range": [
          "debug",
          "trace",
          "info",
          "warn",
          "error"
        ],
        "default": "trace",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.log4j.logger.task_detailslog_rolling.level",
        "label": "logger.task_detailslog_rolling.level",
        "description": "The logger.task_detailslog_rolling.level configuration in log4j2.properties.",
        "type": "string",
        "range": [
          "debug",
          "trace",
          "info",
          "warn",
          "error"
        ],
        "default": "trace",
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.log4j.clean_logs_older_than_n_days",
        "label": "clean_logs_older_than_n_days",
        "description": "Clean logs older than n days.",
        "type": "integer",
        "min": 0,
        "default": 7,
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.jvm.enable_heap_dump",
        "label": "enable_heap_dump",
        "description": "Whether to enable heap dump on out of memory error.",
        "type": "boolean",
        "default": false,
        "changeable": true,
        "required": "no"
      }, {
        "key": "confd.sysctl.tcp_keepalive_intvl",
        "label": "tcp_keepalive_intvl",
        "description": "Kernel parameter: net.ipv4.tcp_keepalive_intvl, the interval between subsequent keepalive probes, regardless of what the connection has exchanged in the meantime.",
        "type": "integer",
        "min": 0,
        "default": 75,
        "changeable": true,
        "required": "no"
      }, {
        "key": "confd.sysctl.tcp_keepalive_probes",
        "label": "tcp_keepalive_probes",
        "description": "Kernel parameter: net.ipv4.tcp_keepalive_probes, the number of unacknowledged probes to send before considering the connection dead and notifying the application layer.",
        "type": "integer",
        "min": 0,
        "default": 9,
        "changeable": true,
        "required": "no"
      }, {
        "key": "confd.sysctl.tcp_keepalive_time",
        "label": "tcp_keepalive_time",
        "description": "Kernel parameter: net.ipv4.tcp_keepalive_time, the interval between the last data packet sent (simple ACKs are not considered data) and the first keepalive probe; after the connection is marked to need keepalive, this counter is not used any further.",
        "type": "integer",
        "min": 0,
        "default": 7200,
        "changeable": true,
        "required": "no"
      }]
    }, {
      "key": "es_node_2",
      "description": "The role configuration properties of the application",
      "type": "array",
      "properties": [{
        "key": "static.os.node.attr.data",
        "label": "node.attr.data (#2)",
        "description": "Custom attribute for OpenSearch node, used for hot-warm-cold setup.",
        "type": "string",
        "default": "warm",
        "changeable": true,
        "required": "no"
      }]
    }, {
      "key": "es_node_3",
      "description": "The role configuration properties of the application",
      "type": "array",
      "properties": [{
        "key": "static.os.node.attr.data",
        "label": "node.attr.data (#3)",
        "description": "Custom attribute for OpenSearch node, used for hot-warm-cold setup.",
        "type": "string",
        "default": "cold",
        "changeable": true,
        "required": "no"
      }]
    }, {
      "key": "kbn_node",
      "description": "The role configuration properties of the application",
      "type": "array",
      "properties": [{
        "key": "dynamic.other.enable_cerebro",
        "label": "enable_cerebro",
        "description": "Whether start cerebro.service.",
        "type": "boolean",
        "default": true,
        "changeable": true,
        "required": "no"
      }, {
        "key": "proxy.balance.policy",
        "label": "HAProxy balance policy",
        "description": "Define the load balancing algorithm to be used in a backend",
        "type": "string",
        "range": [
          "roundrobin",
          "static-rr",
          "leastconn",
          "first",
          "source"
        ],
        "default": "roundrobin",
        "changeable": true,
        "required": "no"
      }, {
        "key": "proxy.backend.select",
        "label": "HAProxy backend selection",
        "description": "Select types of opensearch nodes for haproxy backend.",
        "type": "string",
        "range": [
          "hot",
          "warm",
          "cold"
        ],
        "changeable": true,
        "multichoice": true,
        "separator": ",",
        "default": "hot,warm,cold",
        "required": "true"
      }, {
        "key": "proxy.connect.timeout",
        "label": "HAProxy Connect Timeout",
        "description": "Sets the timeout for HAProxy to connect OpenSearch services, can be ms, s, m, or h, e.g. 50s for 50 seconds",
        "type": "string",
        "pattern": "[1-9]*[0-9]+(ms|s|m|h)?",
        "default": "5s",
        "changeable": true,
        "required": "no"
      }, {
        "key": "proxy.timeout",
        "label": "HAProxy Proxy Timeout",
        "description": "Sets the timeout for HAProxy to get response from OpenSearch services, can be ms, s, m, or h, e.g. 50s for 50 seconds",
        "type": "string",
        "pattern": "[1-9]*[0-9]+(ms|s|m|h)?",
        "default": "60s",
        "changeable": true,
        "required": "no"
      }, {
        "key": "proxy.max.conn",
        "label": "HAProxy Proxy Max Connections",
        "description": "Sets the maximum per-process number of concurrent connections",
        "type": "number",
        "min": 0,
        "max": 65535,
        "default": 2000,
        "changeable": true,
        "required": "no"
      }, {
        "key": "nginx_client_max_body_size",
        "label": "HAProxy Proxy Max Request",
        "description": "Sets the maximum allowed size of the client request body",
        "type": "string",
        "pattern": "[0-9]+[km]?",
        "default": "20m",
        "changeable": true,
        "required": "no"
      }]
    }, {
      "key": "lst_node",
      "description": "The role configuration properties of the application",
      "type": "array",
      "properties": [{
        "key": "static.lst.config.reload.automatic",
        "label": "config.reload.automatic",
        "description": "Periodically check if the configuration has changed and reload the pipeline. This can also be triggered manually through the SIGHUP signal",
        "type": "boolean",
        "default": false,
        "changeable": true,
        "required": "no"
      }, {
        "key": "static.lst.config.reload.interval",
        "label": "config.reload.interval",
        "description": "How often to check if the pipeline configuration has changed (in seconds)",
        "type": "string",
        "pattern": "[0-9]+[smh]?",
        "default": "3s",
        "changeable": true,
        "required": "no"
      }, {
        "key": "depend.lst.pipeline",
        "label": "logstash pipeline",
        "description": "Logstash pipeline config",
        "type": "string",
        "default": "",
        "changeable": true,
        "required": "no"
      }]
    }]
  }, {
    "key": "service_params",
    "description": "custom services parameters",
    "type": "array",
    "properties": [{
      "key": "dump.node.ip",
      "label": "OpenSearch Node IP",
      "description": "The node IP of OpenSearch on which to dump JVM heap",
      "type": "string",
      "pattern": "^((\\d+\\.){3}\\d+)?$",
      "default": "",
      "required": "yes"
    }, {
      "key": "dump.timeout",
      "label": "Operation Timeout",
      "description": "The dump timeout in seconds",
      "type": "integer",
      "min": 30,
      "max": 1800,
      "default": 300,
      "required": "no"
    }, {
      "key": "clear.dump.node.ip",
      "label": "OpenSearch Node IP",
      "description": "The node IP of OpenSearch on which to clear dump JVM heap",
      "type": "string",
      "pattern": "^((\\d+\\.){3}\\d+)?$",
      "default": "",
      "required": "no"
    }, {
      "key": "restart.node.ip",
      "label": "OpenSearch Node IP",
      "description": "The node IP of OpenSearch on which to restart",
      "type": "string",
      "pattern": "^((\\d+\\.){3}\\d+)?$",
      "default": "",
      "required": "no"
    }, {
      "key": "restart.timeout",
      "label": "Operation Timeout",
      "description": "The restart timeout in seconds",
      "type": "integer",
      "min": 60,
      "max": 1800,
      "default": 600,
      "required": "no"
    }]
  }]
}
